visualGPS:
    ☐ figure out a unit testing framework @created(17-07-11 15:23)
    ☐ add rest docstrings to classes and functions @created(17-07-11 15:23)
    ☐ create VisualGPS IOC class @created(17-07-12 18:36) @started(17-07-13 12:00)
        create a factory class to register parser and readers to.
        after registering a reader and parser class the module wil create objects of expected types
        and bind them together essentially.
        ✔ have the register function accept a class and specify a role somehow @created(17-07-12 18:40) @started(17-07-13 15:21) @done (17-07-13 18:56) @lasted(3:35)
            ✔ how should we specify roles? think of a way with either strings or class name. @done (17-07-12 18:39)
                were going to check super class
        ✔ figure out why get_frame is saying self.parser doesn't have a payload attribute @created(17-07-13 18:58) @done (17-07-13 18:59)
        ☐ add more functionality to this class such as when reading a file get stats of the whole file @created(17-07-13 19:01)
        ☐ figure out a way to handle real time data. @created(17-07-13 19:03)
            were going to call a get_frame function from comreader which will pause the calling thread till it has received a full frame over serial.
    parser:
        ☐ implement content parser @created(17-07-07 18:11) @started(17-07-11 14:49)
            how do we specify in the config how to format data?
            ✔ think of way to grab payload from reader module @done (17-07-11 14:44)
                perhaps we should have parser call a reader function with parameters to grab the data
                yes this sounds good
            ✔ implement ability to interpret header structure and determine payload size and position @created(17-07-11 14:45) @started(17-07-11 14:49) @done (17-07-11 19:14) @lasted(4:25)
                payload is a pretty generic thing so maybe this should be part of the parser super class. We'll have a propak6 child class
                ✔ implement config file payload size and offset @created(17-07-11 14:50) @started(17-07-11 14:50) @done (17-07-11 16:59) @lasted(2:09)
                ✔ figure out a way to reconcile dependency between parser and reader @created(17-07-11 16:30) @started(17-07-11 16:30) @done (17-07-11 19:14) @lasted(2:44)
                    for now im just going to get the frame from file reader and then call digest_data with ProPak6 after setting up the header structures
            ☐ digest data @created(17-07-11 19:18) @started(17-07-11 19:18)
                ✔ determine message_id, message_type, where the message is @created(17-07-11 19:30) @started(17-07-14 12:54) @toggle(17-07-14 18:08) @done (17-07-26 14:19) @lasted(5:14)
                    message_id of 38, 73, 75, is what's in the data but these aren't in the spec. Oh wait they are and you need to look in the data log tables
                ✔ determine what the payload means @created(17-07-14 18:08) @done (Wed Jul-26-17 19:14)
                    see data log reference page
                ☐ parse payload data into ascii strings @created(Wed Jul-26-17 19:14)
                    For this were going to use the config file to write payload information similar to the header structure this way we can easily add new entries as well as chnage old ones.
                    The way this will work is that we'll start by adding using the enum names which are the message_id as the field parent which will store the offset and size. We can also add encoding this way which is nice
                    ✔ decide how to construct the config payload @created(Fri Jul-28-17 14:48) @started(Fri Jul-28-17 14:48) @done (Fri Jul-28-17 17:43) @lasted(2:55)
                    ☐ 43 range @created(Wed Jul-26-17 19:14)
                        ☐ figure out a way to account for all the observers in the config file @created(Mon Jul-31-17 18:59) @started(Mon Jul-31-17 18:59) @toggle(Wed Aug-02-17 14:35)
                        ✔ implement basic parsing of 1 range field @created(Wed Aug-02-17 14:36) @started(Wed Aug-02-17 14:45) @done (Tue Aug-08-17 18:24) @lasted(6 days, 3:39)
                    ✔ 25 rawgpssubframe @created(Wed Jul-26-17 19:22) @done (Mon Aug-14-17 14:08)
                        ✔ add this to config @done (Mon Aug-14-17 13:27)
                    ✔ 973 rawsbassubframe @created(Wed Jul-26-17 19:22) @done (Mon Aug-14-17 14:08)
                        ✔ add this to config @done (Fri Aug-11-17 15:12)
                    ✔ 1306 unkown @created(Wed Jul-26-17 19:23) @done (Mon Aug-14-17 14:08)
                        ✔ add this to config @done (Mon Aug-14-17 13:18)
                        ✔ finally got the data for this config adding it now @created(Wed Aug-23-17 16:44) @started(Wed Aug-23-17 16:44) @done (Wed Aug-23-17 16:53) @lasted(0:09)
                    ✔ 41 rawephm @created(Wed Jul-26-17 19:25) @done (Mon Aug-14-17 14:08)
                        ✔ add this to config @done (Mon Aug-14-17 14:08)
                    ✔ figure out what to do if a config message doesn't exist @created(Fri Aug-25-17 17:58) @started(Fri Aug-25-17 17:58) @done (Fri Aug-25-17 18:06) @lasted(0:08)
                    ☐ 48 @created(Mon Aug-28-17 14:01)
                    ☐ 47 @created(Mon Aug-28-17 14:01)
                    ☐ 83 @created(Mon Aug-28-17 14:01)
                ✔ decide what realtime data is important and needs to be aggregated @created(Wed Jul-26-17 19:58) @done (Mon Sep-11-17 14:55)
                    such as ranging data or whatever
                    going to graph c/no of range data
                ☐ move the important information to display to the super class @created(Wed Jul-26-17 20:00)
                    we need the overall super parser to aggregate the data from individual frames
                ✘ find a simpler way to read updated data from the parser when new frames are loaded. @created(Fri Aug-11-17 15:15) @cancelled (Mon Sep-11-17 14:55)
                ☐ Check CRC @created(Mon Aug-14-17 14:09)
            ✔ implement message structure when instantiating a new parser from the config file @created(Wed Aug-02-17 16:47) @started(Wed Aug-02-17 16:47) @done (Fri Aug-11-17 15:13) @lasted(8 days, 22:26)
            ✔ i don't like initiating the parser object with header structure because we would need a new one each frame. @created(17-07-12 15:05) @started(17-07-12 15:26) @done (17-07-12 18:17) @lasted(2:51)
            ✘ were going to create a register and factory possibly for the parser @created(17-07-12 16:54) @cancelled (17-07-12 18:40)
                this is now being done at the root of the visualgps module with a IOC class
    reader:
        ✔ implement FileReaderController @done (17-07-07 18:01)
        ☐ implement ComReaderController
            ✔ figure out how to read com serial into python @created(Fri Aug-11-17 15:13) @started(Thu Aug-17-17 18:29) @done (Tue Aug-22-17 17:43) @lasted(4 days, 23:14)
                Just using pyserial for now
                ✔ figure out why the serial port is already open @created(Tue Aug-22-17 14:23) @started(Tue Aug-22-17 14:23) @done (Tue Aug-22-17 14:25) @lasted(0:02)
            ✔ make sure we can read serial data fast enough @created(Fri Aug-11-17 15:14) @done (Tue Aug-22-17 17:43)
                It's a low baudrate so we should be fine
            ✔ create com reader class and get basic com data into it @created(Thu Aug-17-17 18:29) @started(Tue Aug-22-17 17:44) @done (Thu Aug-31-17 15:15) @lasted(8 days, 21:31)
                ✔ implement get frame @created(Tue Aug-22-17 17:44) @started(Tue Aug-22-17 17:44) @toggle(Wed Aug-23-17 16:29) @toggle(Mon Aug-28-17 16:43) @toggle(Mon Aug-28-17 17:44) @toggle(Tue Aug-29-17 12:11) @done (Thu Aug-31-17 15:15) @lasted(3 days, 2:50)
                    ✔ implement seek_next_bytes_pos @created(Tue Aug-29-17 14:19) @started(Tue Aug-29-17 14:19) @done (Thu Aug-31-17 15:15) @lasted(2 days, 0:56)
                    ✘ move _seek_next_sync_bytes_pos to parent class and accept any buffer of data @created(Mon Aug-28-17 17:44) @started(Tue Aug-29-17 12:12) @cancelled (Tue Aug-29-17 13:17) @wasted(1:05)
                ✔ make sure the monitor is outputing in binary mode @created(Wed Aug-23-17 16:29) @started(Wed Aug-23-17 16:29) @toggle(Wed Aug-23-17 16:45) @toggle(Wed Aug-23-17 16:54) @toggle(Wed Aug-23-17 18:15) @toggle(Thu Aug-24-17 15:25) @toggle(Fri Aug-25-17 17:58) @done (Mon Aug-28-17 14:00) @lasted(1 day, 4:10)
                    for now we're going to just use the junk com data and make up some sync bytes.
                    scratch that it works with normal sync bytes but serialpy must be defaulting to a slower baudrate. We can change that later
            ✔ implement realtime data display @created(Thu Aug-31-17 15:15) @started(Thu Aug-31-17 15:15) @done (Fri Sep-01-17 14:29) @lasted(23:14)
                this is done with a _thread so data updates in the background but the main process is shared.
                ✔ figure out how asciimatics branches function calls @created(Thu Aug-31-17 17:21) @started(Thu Aug-31-17 17:24) @done (Fri Sep-01-17 14:29) @lasted(21:05)
                    looks like the function needs to be returned before any display drawing can happen
                ✔ figure out if the pipe is always filling with a backlog @created(Thu Aug-31-17 17:21) @started(Thu Aug-31-17 17:21) @done (Thu Aug-31-17 17:24) @lasted(0:03)
                    yes pyserial never stops filling with data so we need to reinitialize the pipe every frame
                ☐ test the real time display to make sure the data is correct and coming in at real time @created(Fri Sep-01-17 14:32) @started(Fri Sep-01-17 14:32)
                    ☐ figure out why the 0 frames appear periodically @created(Tue Sep-05-17 12:39) @started(Tue Sep-05-17 12:39)
                ☐ we need a way to constantly buffer com data in a separate thread @created(Fri Sep-01-17 14:37)
                    Do we though? Does it matter if we miss some frames?
            ☐ try other baudrates @created(Tue Sep-05-17 17:31)
        ✔ implement header structure into reader @created(17-07-10 16:46) @done (17-07-11 14:34)
            we're removing the header structure from the parser since it makes more sense to be in the reader as the reader is static
        ✔ implement header structure parser @done (17-07-11 14:43)
            do we need to check the header structure each frame or just the first? Obviously we need to check for errors
            ✔ import header structure data with offset and size @done (17-07-07 01:15)
            ✔ encode header structure data @created(17-07-10 01:15) @started(17-07-10 17:54) @done (17-07-11 14:42) @lasted(20:48)
                ✔ create function to decode field data with encode string @done (17-07-10 18:26)
                ✔ finish adding and testing encoded fields @created(17-07-10 18:28) @started(17-07-11 13:51) @done (17-07-11 14:42) @lasted(0:51)
        ✘ Should we use bytearray rather than byte strings? @cancelled (17-07-14 16:13)
            it would actually be the same speed as using bytearray since were not appending to an existing byte string. Were just reading byte strings from a file. The byte string would have to be converted to a bytearray anyway so it's probably faster to just use the byte string. We'll use a bytearray in the future if we need to mutate it (like sending commands)
            We can't use numpy.fromfile because the frame structure isn't known until we get the header of the frame.
        ✔ make useful functions outside of reader stati @done (Thu Aug-10-17 15:55)
        tests:
            ☐ test header structure @created(17-07-11 15:23)
                to do this we need to have our own canned binary string and just test that we can pull out elements. also need a canned config file
                ☐ create canned binary data and canned config string @created(17-07-11 15:23)
            ☐ test some parser messages @created(Fri Aug-11-17 15:16)
            ☐ test real time parsing to see if wer're dropping any data @created(Fri Sep-01-17 14:31)
    TUI:
        ✔ what framework do we want to use for this? @created(17-07-17 16:27) @started(17-07-17 16:27) @toggle(17-07-17 19:00) @toggle(17-07-18 14:58) @done (17-07-18 15:49) @lasted(3:24)
            there's ncurses, curses, uriwd, asciimatics
            asciimatics uses layouts and widgets but ncurses and urwid is procedural so we'll use asciimatics
            unfortunately it looks like asciimatics is kind of slow @created(Wed Jul-26-17 19:27)
        ✔ display header structure @created(17-07-17 13:57) @started(17-07-18 15:49) @toggle(17-07-21 17:14) @toggle(17-07-24 12:15) @done (Mon Sep-11-17 14:54)
            we'll start with just a window of fields to display header structure
            ✔ figure out how to initialize a window and display text @created(17-07-24 12:15) @started(17-07-24 12:15) @done (17-07-25 15:00) @lasted(1 day, 2:45)
                ✔ solve 2 parameters bug @created(17-07-24 19:03) @started(17-07-24 19:04) @done (17-07-25 15:00) @lasted(19:56)
            ✔ figure out how to pull information from python dict into asciimatics @created(17-07-25 15:01) @started(17-07-25 15:01) @done (17-07-26 14:18) @lasted(23:17)
                we'll probably just pass the visualgps ioc container
            ✔ display the information @created(17-07-25 15:01) @started(Wed Jul-26-17 16:24) @done (Wed Jul-26-17 18:48) @lasted(2:24)  
                ✔ we need to create enumerated tuples of the header information @created(17-07-26 16:24) @started(Wed Jul-26-17 16:24) @done (Wed Jul-26-17 18:48) @lasted(2:24)
            ✔ make it pretty @created(17-07-25 15:01) @done (Mon Sep-11-17 14:54)
            ✔ add buttons to get the next frame @created(17-07-25 15:01) @done (Wed Jul-26-17 18:48)
                ✔ figure out how to update the display @created(17-07-25 17:00) @started(17-07-26 15:19) @toggle(17-07-26 16:24) @toggle(Wed Jul-26-17 18:49) @done (Wed Jul-26-17 18:49)
                ✔ need a new color scheme @created(Fri Aug-11-17 15:16) @done (Thu Aug-17-17 18:27)
        ☐ Display payload information @created(Wed Jul-26-17 19:12)
            ✔ Figure out best way to pass information from the parser to the ui @done (Wed Jul-26-17 19:59)
                just use the gps controller and pull information from that. Most of the displat fields should probably be in the Parser super class
        ✔ Display message enum @created(Wed Jul-26-17 19:12) @done (Tue Aug-08-17 18:25)
            The mesage enum comes from the data log sheet
        ☐ figure out how we want to display the playback file information @created(Fri Aug-11-17 15:16)
            number of logs and types of logs? what else is importnat? skipping frames
        ✔ display the information without listbox so it's not selectable @created(Mon Aug-14-17 13:25) @started(Mon Aug-14-17 13:25) @done (Thu Aug-17-17 18:29) @lasted(3 days, 5:04)
            we just disabled the listbox and created a new colorscheme
        ☐ sort the dictionary so the information is in the same spot @created(Mon Aug-14-17 14:07)
        ✔ figure out how to update data on the screen @created(Fri Sep-01-17 12:23) @done (Fri Sep-01-17 14:30)
            This is done with self.screen.force_update()
        ☐ work on resizing the tables when larger data comes in after the screen is drawn @created(Fri Sep-01-17 14:31)
        ☐ work on resizing the screen when the user resizes the terminal @created(Fri Sep-01-17 14:31)
        ☐ add scroll bars and dynamic sizing of list boxes @created(Tue Sep-05-17 18:29)
        ✔ add second view and tabbing @created(Thu Sep-07-17 13:23) @started(Thu Sep-07-17 13:23) @done (Mon Sep-11-17 14:53) @lasted(4 days, 1:30)
            figured out how to use raise nextscene in conjunction with buttons.
        ☐ add popup for graphing c/no @created(Tue Sep-05-17 18:29)
            suggested by swen
        ☐ on second view figure out hot to create a rolling line graph for graphing frame values over time. @created(Mon Sep-11-17 14:56) @started(Mon Sep-11-17 14:56)